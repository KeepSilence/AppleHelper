<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7k9Z4fEZJdYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAzP//AJn//wBm//8AM///AP/M
        /wDMzP8Amcz/AGbM/wAzzP8AAMz/AP+Z/wDMmf8AmZn/AGaZ/wAzmf8AAJn/AP9m/wDMZv8AmWb/AGZm
        /wAzZv8AAGb/AP8z/wDMM/8AmTP/AGYz/wAzM/8AADP/AMwA/wCZAP8AZgD/ADMA/wD//8wAzP/MAJn/
        zABm/8wAZv/MADP/zAAA/8wA/8zMAMzMzACZzMwAZszMADPMzAAAzMwA/5nMAMyZzACZmcwAZpnMADOZ
        zAAAmcwA/2bMAMxmzACZZswAZmbMADNmzAAAZswA/zPMAMwzzACZM8wAZjPMADMzzAAAM8wA/wDMAMwA
        zACZAMwAZgDMADMAzAAAAMwA//+ZAMz/mQCZ/5kAZv+ZADP/mQAA/5kA/8yZAMzMmQCZzJkAZsyZADPM
        mQAAzJkA/5mZAMyZmQCZmZkAZpmZADOZmQAAmZkA/2aZAMxmmQCZZpkAZmaZADNmmQAAZpkA/zOZAMwz
        mQCZM5kAZjOZADMzmQAAM5kA/wCZAMwAmQCZAJkAZgCZADMAmQAAAJkA//9mAMz/ZgCZ/2YAZv9mADP/
        ZgAA/2YA/8xmAMzMZgCZzGYAZsxmADPMZgAAzGYA/5lmAMyZZgCZmWYAZplmADOZZgAAmWYA/2ZmAMxm
        ZgCZZmYAZmZmADNmZgAAZmYA/zNmAMwzZgCZM2YAZjNmADMzZgAAM2YA/wBmAMwAZgCZAGYAZgBmADMA
        ZgAAAGYA//8zAMz/MwCZ/zMAZv8zADP/MwAA/zMA/8wzAMzMMwCZzDMAZswzADPMMwAAzDMA/5kzAMyZ
        MwCZmTMAZpkzADOZMwAAmTMA/2YzAMxmMwCZZjMAZmYzADNmMwAAZjMA/zMzAMwzMwCZMzMAZjMzADMz
        MwAAMzMA/wAzAMwAMwCZADMAZgAzADMAMwAAADMAzP8AAJn/AABm/wAAM/8AAP/MAADMzAAAmcwAAGbM
        AAAzzAAAAMwAAP+ZAADMmQAAmZkAAGaZAAAzmQAAAJkAAP9mAADMZgAAmWYAAGZmAAAAZgAAM2YAAP8z
        AADMMwAAmTMAAGYzAAAzMwAAADMAAMwAAACZAAAAZgAAADMAAAAAAN0AAAC7AAAAqgAAAIgAAAB3AAAA
        VQAAAEQAAAAiAADdAAAAuwAAAKoAAACIAAAAdwAAAFUAAABEAAAAIgAA3d3dAFVVVQB3d3cAd3d3AERE
        RAAiIiIAERERAHcAAABVAAAARAAAACIAAADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AALOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswCIiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs
        7Ozs7Ozs7Oyzs4j39/b29vb29jLY2NhdXff39/fY2Nhd9wfr9vb27OyziPf29vb29vbY2NjY2Nhd7e3Y
        2NjY2Nhd9wfr9vb27LOI9/b29vb22NjY2NjY2NjY2NjY2NjY2Nhd9zL29vbss4j39vb29uvY2NjY2NjY
        2NjY2NjY2NjY2Nhd9+v29uyziPf29vb27ZWVlZWVlZWVlZWVlZWVlZWVlV33B/b27LOI9/b29veVlZWV
        lZWVlZWVlZWVlZWVlZWVlV336/bss4j39vb2jpWVlZWVlZWVlZWVlZWVlZWVlZWVXffr9uyziPf29geV
        lZWVlZWVlZWVlZWVlZWVlZWVlZVqMvb27LOI9/b23Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NzcR0f29vbss4j3
        9vbc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3NwH9vb29uyziPf23Nzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nzc9+v29vb2
        7LOI9/YlJSUlJSUlJSUlJSUlJSUlJSUlJSX36/b29vbss4j39iUlJSUlJSUlJSUlJSUlJSUlJSUlXQf2
        9vb29uyziPf2JSUlJSUlJSUlJSUlJSUlJSUlJSVd9+v29vb27LOI9/YlJSUlJSUlJSUlJSUlJSUlJSUl
        JV336/b29vbss4j39hMTExMTExMTExMTExMTExMTExMTXvcH9vb29uyziPf2ExMTExMTExMTExMTExMT
        ExMTExMTXfcy9vb27LOI9/b2EhMTExMTExMTExMTExMTExMTExNeXffr9vbss4j39vZgYIRghISEhISE
        hISEhISEhISEhIRd9+v29uyziPf29vaC5ubm5ubm5ubm5ubm5ubm5ubm5uYy9vb27LOI9/b29vaD5ubm
        5ubm5ubm5ubm5ubm5ubm9/b29vbss4j39vb29vb25ubm5qf26/b2gqfm5ubK5uv29vb29uyziPf29vb2
        9vb29vb29vb25uanXff3Mvb29vb29vb27LOI9/b29vb29vb29vb29qen5uanXfcH9vb29vb29vbss4j3
        9vb29vb29vb29vb29qfm5uanXffr9vb29vb29uyziPf29vb29vb29vb29vb29srm5uan9+v29vb29vb2
        7LOI9/b29vb29vb29vb29vb2Msrm5qcy6/b29vb29vbss4j39/b29vb29vb29vb29vb266fmp/b29vb2
        9vb29+yziIj39/f39/f39/f39/f39/f393z39/f39/f39/f397MAiIiIiIiIiIiIiIiIiIiIiIiIiIiI
        iIiIiIiIiIiIAIAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAAB
</value>
  </data>
</root>